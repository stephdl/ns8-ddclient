#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

#
# Read configuration
#

import os
import sys
import json
import agent
import subprocess

# Prepare return variable
config = {}

# Read current configuration from the environment file
config["ddclient_host"] = os.getenv("DDCLIENT_HOST","")
config["ddclient_login"] = os.getenv("DDCLIENT_LOGIN","")
config["ddclient_protocol"] = os.getenv("DDCLIENT_PROTOCOL","")
config["ddclient_server"] = os.getenv("DDCLIENT_SERVER","")
config["ddclient_daemon"] = os.getenv("DDCLIENT_DAEMON","300")
config["ddclient_ipv6"] = True if os.getenv("DDCLIENT_IPV6","") == "webv6" else False

if os.path.exists("password.env"):
    config["ddclient_configured"] = True
else:
    config["ddclient_configured"] = False

config["ddclient_password"] = ""


def get_ip(version='-4'):
    try:
        # Validate the IP version argument
        if version not in ['-4', '-6']:
            raise ValueError("Invalid IP version specified. Use '-4' for IPv4 or '-6' for IPv6.")
        
        # Run the curl command with the specified IP version
        result = subprocess.run(["curl", version, "icanhazip.com"], capture_output=True, text=True, check=True)
        # Get the output and strip any extra whitespace
        ip_address = result.stdout.strip()
    except (subprocess.CalledProcessError, ValueError) as e:
        # If there's an error, return an empty string
        ip_address = ""
        print(f"cannot retrieve IP {version}: {e}", file=sys.stderr)

    return ip_address

# Example usage
config["ipv4_address"] = get_ip('-4')
config["ipv6_address"] = get_ip('-6') if config["ddclient_ipv6"] else ""

# Dump the configuration to stdout
json.dump(config, fp=sys.stdout)
